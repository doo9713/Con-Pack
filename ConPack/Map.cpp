#include "Map.h"


bool Map::CheckCandy()
{
	for (int i = 1; i < WINSIZEY - 1; ++i)
		if (candyPos[i].size() != 0)
			return false;
	return true;
}

void Map::PrintCandy()
{
	CONSOLE.SetTextColor(LIGHTSKYBLUE);
	for (int i = 1; i < WINSIZEY - 1; ++i)
		for (auto iter : candyPos[i])
			CONPOS(iter, i) << "﹞";
	CONSOLE.SetTextColor(WHITE);
}

void Map::PrintMap()
{
	CONPOS(0, 0) << "忙式式式成式式式式式式式式式成式成式式式式式式成式成式式式成式式式式式式式式式忖";
	CONPOS(0, 1) << "弛﹛﹛﹛弛式式式式式式式式式弛﹛弛﹛﹛﹛﹛﹛﹛弛﹛弛式式式弛﹛﹛﹛﹛﹛﹛﹛﹛﹛弛";
	CONPOS(0, 2) << "戍式忖﹛戌式式忖式式式式式式弛﹛戌式式式式式式戎﹛弛式式式弛﹛忙式式式式式忖﹛弛";
	CONPOS(0, 3) << "弛式弛﹛﹛﹛﹛弛式式式式式式弛﹛﹛﹛﹛﹛﹛﹛﹛﹛﹛弛式式式弛﹛弛式式式式式弛﹛弛";
	CONPOS(0, 4) << "弛式戌式式忖﹛弛式式式式式式弛﹛忙式式式式式式式式戎式式式弛﹛弛式式式式式戌式扣";
	CONPOS(0, 5) << "弛式式式式弛﹛戌式式式式式式戎﹛弛式式式式式式式式式式式式弛﹛弛式式式式式式式弛";
	CONPOS(0, 6) << "弛式式式式弛﹛﹛﹛﹛﹛﹛﹛﹛﹛﹛戌式式式式忖式式式式式式式弛﹛弛式式式式式式式弛";
	CONPOS(0, 7) << "弛式式式式弛﹛忙式式式式式式忖﹛﹛﹛﹛﹛﹛弛式式式式式式式弛﹛戌式式式式式式式扣";
	CONPOS(0, 8) << "戍式式式式戎﹛弛式式式式式式戌式式式式忖﹛弛式式式式式式式弛﹛﹛﹛﹛﹛﹛﹛﹛﹛弛";
	CONPOS(0, 9) << "弛﹛﹛﹛﹛﹛﹛弛式式式式式式式式式式式弛﹛戌式式式式式式式戎﹛忙式式式式式式式扣";
	CONPOS(0, 10) << "弛﹛忙式式式式戎式式式式式式式式式式式弛﹛﹛﹛﹛﹛﹛﹛﹛﹛﹛﹛弛式式式式式式式弛";
	CONPOS(0, 11) << "弛﹛弛式式式式式式式式式式式式式式式式弛﹛忙式式式式式式式式式戎式式式式式式式弛";
	CONPOS(0, 12) << "弛﹛弛式式式式式式式式式式式式式式式式弛﹛弛式式式式式式式式式式式式式式式式式弛";
	CONPOS(0, 13) << "弛﹛弛式式式忙式式式式式式忖式式式式式弛﹛戌式式式式式忖式式式式忙式式式式式式扣";
	CONPOS(0, 14) << "弛﹛弛式式式弛﹛﹛﹛﹛﹛﹛戌式式式式式戎﹛﹛﹛﹛﹛﹛﹛弛式式式式弛﹛﹛﹛﹛﹛﹛弛";
	CONPOS(0, 15) << "弛﹛弛式式式弛﹛忙式式忖﹛﹛﹛﹛﹛﹛﹛﹛﹛忙式式式忖﹛戌式式式式戎﹛忙式式式式扣";
	CONPOS(0, 16) << "弛﹛弛式式式弛﹛弛式式戌式式式式式式式式式戎式式式弛﹛﹛﹛﹛﹛﹛﹛﹛弛式式式式弛";
	CONPOS(0, 17) << "弛﹛弛式式式弛﹛弛式式式式式式式式式式式式式式式式戌式式忖﹛忙式式式戎式式式式弛";
	CONPOS(0, 18) << "弛﹛戌式式式戎﹛弛式式式式式式式式式式式式式式式式式式式弛﹛弛式式式式式式式式弛";
	CONPOS(0, 19) << "弛﹛﹛﹛﹛﹛﹛﹛戌式式式式忖式式式式式式式忙式式式式式式戎﹛弛式式式式式式式式弛";
	CONPOS(0, 20) << "戍式式式式式忖﹛﹛﹛﹛﹛﹛弛式式式式式式式弛﹛﹛﹛﹛﹛﹛﹛﹛戌式式式式式式式式扣";
	CONPOS(0, 21) << "弛式式式式式戌式式式式忖﹛弛式式式式式式式弛﹛忙式式式式忖﹛﹛﹛﹛﹛﹛﹛﹛﹛﹛弛";
	CONPOS(0, 22) << "弛式式式式式式式式式式弛﹛弛式式式式式式式弛﹛弛式式式式戌式式忖﹛忙式式式忖﹛弛";
	CONPOS(0, 23) << "弛式式式式式式式式式式弛﹛戌式式式式式式式戎﹛弛式式式式式式式弛﹛弛式式式弛﹛弛";
	CONPOS(0, 24) << "弛式式式式式式式式式式弛﹛﹛﹛﹛﹛﹛﹛﹛﹛﹛﹛弛式式式式式式式弛﹛弛式式式弛﹛弛";
	CONPOS(0, 25) << "弛式式式式式式式式式式弛﹛忙式式忖﹛忙式式忖﹛弛式式式式式式式弛﹛弛式式式弛﹛弛";
	CONPOS(0, 26) << "戍式式式式式式式式式式戎﹛弛式式弛﹛弛式式弛﹛弛式式式式式式式弛﹛弛式式式弛﹛弛";
	CONPOS(0, 27) << "弛﹛﹛﹛﹛﹛﹛﹛﹛﹛﹛﹛﹛弛式式弛﹛戌式式戎﹛戌式式式式式式式戎﹛弛式式式弛﹛弛";
	CONPOS(0, 28) << "弛﹛忙式式式式式式式式式式戎式式弛﹛                              弛式式式弛﹛弛";
	CONPOS(0, 29) << "戌式扛式式式式式式式式式式式式式扛式式式式式式式式式式式式式式式式扛式式式扛式戎";
	PrintCandy();
}

Map::Map()
{
	char Path[1024];
	wsprintfA(Path, "/Data/Stage/Stage.dat");
	for (int i = 1; i < WINSIZEY - 1; ++i)
	{		
		string temp = ReadString("TriggerPoint", IntToString(i), Path);
		triggerPos[i] = SplitUseToken(temp, ",");
		int t_cnt = 0;
		for (int j = 2; j < WINSIZEX - 2; j+=2)
		{
			if (j == triggerPos[i].at(t_cnt)) 
			{
				if(t_cnt < triggerPos[i].size()-1)
					++t_cnt;
				continue;
			}
			else
			{
				candyPos[i].push_back(j);
			}
		}
	}
}

Map::~Map()
{
	for (int i = 0; i < WINSIZEY; ++i)
		triggerPos[i].clear();
}
